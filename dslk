
#include<iostream>
#include<string>
#include<sstream>
#include<vector>
#include<algorithm>
using namespace std;
struct Node {
	int data;
	Node* next;

	Node(int data) {
		this->data = data;
		this->next = nullptr;
	}
};


struct List {
	Node* head;
	Node* tail;
	int Size;
	List() {
		this->head = nullptr;
		this->tail = nullptr;
		this->Size = 0;
	}

	void addFrist(int x) {
		Node* tmp = new Node(x);
		if (head == nullptr) {
			head = tmp;
			tail = tmp;
		}
		else {
			tmp->next = head;
			head = tmp;
		}
		Size++;
	}

	void addEnd(int x) {
		Node* tmp = new Node(x);
		if (head == nullptr) {
			head = tmp;
			tail = tmp;
		}
		else {
			tail->next = tmp;
			tail = tmp;
		}
		Size++;
	}

	void addMid(int x, int pos) {
		if (pos == Size + 2 || pos <= 0) {
			cout << "Vi tri chen khong hop le.";
		}
		else if (pos == 1) {
			addFrist(x);
		}
		else if (pos == Size + 1) {
			addEnd(x);
		}
		else {
			Node* p = head;
			Node* tmp = new Node(x);
			for (int i = 1; i < pos - 1; i++) {
				p = p->next;
			}
			tmp->next = p->next;
			p->next = tmp;
		}
		Size++;
	}


	void deleteFrist() {
		if (head == nullptr) {
			cout << "Danh sach lien ket rong.";
		}
		else {
			head = head->next;
			Size--;
		}
	}

	void deleteEnd() {
		if (head == nullptr) {
			cout << "Danh sach lien ket rong.";
		}
		else {
			Node* p = head;
			while (p->next->next != nullptr) {
				p = p->next;
			}
			tail = p;
			p->next = nullptr;
			Size--;
		}
	}

	void deleteMid(int pos) {
		Node* p = head;
		if (head == nullptr) {
			cout << "Danh sach lien ket rong.";
		}
		else if (pos <= 0 || pos > Size) {
			cout << "Vi tri xoa khong hop le.";
		}
		else {
			for (int i = 1; i < pos - 1; i++) {
				p = p->next;
			}
			p->next = p->next->next;
			Size--;
		}
	}

	void deleteK(int k) {
		Node* p = head;
		int ok = 0;
		while (p->next != nullptr) {
			if (p->next->data == k) {
				p->next = p->next->next;
				ok = 1;
			}
			else {
				p = p->next;
			}
		}
		if (head->data == k) {
			head = head->next;
			ok = 1;
		}
		if (ok == 0) {
			cout << "Gia tri khong ton tai trong List.";
		}
		else {
			Size--;
		}
	}

	void show() {
		Node* p = head;
		while (p != nullptr) {
			cout << p->data << " ";
			p = p->next;
		}
	}
};
int main() {
	List ls;
	ls.addEnd(5);
	ls.addFrist(10);
	ls.addFrist(1);
	ls.addMid(3, 2);
	ls.addFrist(100);
	// 100 1 3 10 100;
	ls.deleteEnd();
	ls.addEnd(100);
	ls.show();

}

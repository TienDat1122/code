#include <iostream>
#include <algorithm>

using namespace std;

bool isPrime(int num) {
    if (num < 2) {
        return false;
    }
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
}

void generatePermutations(int A[], int n, int K) {
    int count = 0;
    do {
        bool isPrimeSequence = true;
        for (int i = 0; i <= n - K; i++) {
            int sum = 0;
            for (int j = i; j < i + K; j++) {
                sum += A[j];
            }
            if (!isPrime(sum)) {
                isPrimeSequence = false;
                break;
            }
        }
        if (isPrimeSequence) {
            for (int i = 0; i < n; i++) {
                cout << A[i] << " ";
            }
            cout << endl;
            count++;
        }
    } while (next_permutation(A, A + n));

    cout << count << " sequences found." << endl;
}

int main() {
    int n, K;
    cout << "Enter n and K: ";
    cin >> n >> K;

    int A[n];
    cout << "Enter the elements of the sequence: ";
    for (int i = 0; i < n; i++) {
        cin >> A[i];
    }

    generatePermutations(A, n, K);

    return 0;
}
